[{"name":"sql.active_record","payload":{"sql":"SELECT a.attname\n  FROM (\n         SELECT indrelid, indkey, generate_subscripts(indkey, 1) idx\n           FROM pg_index\n          WHERE indrelid = '\"customer_masters\"'::regclass\n            AND indisprimary\n       ) i\n  JOIN pg_attribute a\n    ON a.attrelid = i.indrelid\n   AND a.attnum = i.indkey[i.idx]\n ORDER BY i.idx\n","name":"SCHEMA","binds":[],"type_casted_binds":[],"statement_name":null,"connection":"Not JSON Encodable","filename":"C:/work/adusu_std_demo/app/views/customer_masters/index.html.erb","line":10,"method":"_app_views_customer_masters_index_html_erb__487826091_119080"},"time":"2023-06-30T07:58:57.818+09:00","transaction_id":"bbfbcce798b247f3631f","end":"2023-06-30T07:58:57.821+09:00","children":[],"cpu_time_start":0,"cpu_time_finish":0,"allocation_count_start":0,"allocation_count_finish":0,"duration":2.3205},{"name":"sql.active_record","payload":{"sql":"SELECT a.attname, format_type(a.atttypid, a.atttypmod),\n       pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod,\n       c.collname, col_description(a.attrelid, a.attnum) AS comment\n  FROM pg_attribute a\n  LEFT JOIN pg_attrdef d ON a.attrelid = d.adrelid AND a.attnum = d.adnum\n  LEFT JOIN pg_type t ON a.atttypid = t.oid\n  LEFT JOIN pg_collation c ON a.attcollation = c.oid AND a.attcollation \u003c\u003e t.typcollation\n WHERE a.attrelid = '\"customer_masters\"'::regclass\n   AND a.attnum \u003e 0 AND NOT a.attisdropped\n ORDER BY a.attnum\n","name":"SCHEMA","binds":[],"type_casted_binds":[],"statement_name":null,"connection":"Not JSON Encodable","filename":"C:/work/adusu_std_demo/app/views/customer_masters/index.html.erb","line":10,"method":"_app_views_customer_masters_index_html_erb__487826091_119080"},"time":"2023-06-30T07:58:57.821+09:00","transaction_id":"bbfbcce798b247f3631f","end":"2023-06-30T07:58:57.824+09:00","children":[],"cpu_time_start":0,"cpu_time_finish":0,"allocation_count_start":0,"allocation_count_finish":0,"duration":2.4657},{"name":"meta_request.log","payload":{"filename":"C:/work/adusu_std_demo/app/views/customer_masters/index.html.erb","line":10,"method":"_app_views_customer_masters_index_html_erb__487826091_119080","message":"  \u001b[1m\u001b[35m (2.3ms)\u001b[0m  \u001b[1m\u001b[34mSELECT COUNT(count_column) FROM (SELECT DISTINCT \"customer_masters\".\"id\" AS count_column FROM \"customer_masters\" LIMIT $1 OFFSET $2) subquery_for_count\u001b[0m  [[\"LIMIT\", 200], [\"OFFSET\", 0]]","level":"debug"},"time":0,"transaction_id":0,"end":0,"children":[],"cpu_time_start":0,"cpu_time_finish":0,"allocation_count_start":0,"allocation_count_finish":0,"duration":0.0},{"name":"meta_request.log","payload":{"filename":"C:/work/adusu_std_demo/app/views/customer_masters/index.html.erb","line":10,"method":"_app_views_customer_masters_index_html_erb__487826091_119080","message":"  ↳ app/views/customer_masters/index.html.erb:10","level":"debug"},"time":0,"transaction_id":0,"end":0,"children":[],"cpu_time_start":0,"cpu_time_finish":0,"allocation_count_start":0,"allocation_count_finish":0,"duration":0.0},{"name":"sql.active_record","payload":{"sql":"SELECT COUNT(count_column) FROM (SELECT DISTINCT \"customer_masters\".\"id\" AS count_column FROM \"customer_masters\" LIMIT $1 OFFSET $2) subquery_for_count","name":null,"binds":[{"name":"LIMIT","value_before_type_cast":200,"type":{"precision":null,"scale":null,"limit":null},"original_attribute":null,"value":200},{"name":"OFFSET","value_before_type_cast":0,"type":{"precision":null,"scale":null,"limit":null},"original_attribute":null,"value":0}],"type_casted_binds":[200,0],"statement_name":null,"connection":"Not JSON Encodable","filename":"C:/work/adusu_std_demo/app/views/customer_masters/index.html.erb","line":10,"method":"_app_views_customer_masters_index_html_erb__487826091_119080"},"time":"2023-06-30T07:58:57.827+09:00","transaction_id":"bbfbcce798b247f3631f","end":"2023-06-30T07:58:57.830+09:00","children":[],"cpu_time_start":0,"cpu_time_finish":0,"allocation_count_start":0,"allocation_count_finish":0,"duration":3.8283},{"name":"meta_request.log","payload":{"filename":"C:/work/adusu_std_demo/app/views/customer_masters/index.html.erb","line":10,"method":"_app_views_customer_masters_index_html_erb__487826091_119080","message":"  \u001b[1m\u001b[35m (0.5ms)\u001b[0m  \u001b[1m\u001b[34mSELECT COUNT(DISTINCT \"customer_masters\".\"id\") FROM \"customer_masters\"\u001b[0m","level":"debug"},"time":0,"transaction_id":0,"end":0,"children":[],"cpu_time_start":0,"cpu_time_finish":0,"allocation_count_start":0,"allocation_count_finish":0,"duration":0.0},{"name":"meta_request.log","payload":{"filename":"C:/work/adusu_std_demo/app/views/customer_masters/index.html.erb","line":10,"method":"_app_views_customer_masters_index_html_erb__487826091_119080","message":"  ↳ app/views/customer_masters/index.html.erb:10","level":"debug"},"time":0,"transaction_id":0,"end":0,"children":[],"cpu_time_start":0,"cpu_time_finish":0,"allocation_count_start":0,"allocation_count_finish":0,"duration":0.0},{"name":"sql.active_record","payload":{"sql":"SELECT COUNT(DISTINCT \"customer_masters\".\"id\") FROM \"customer_masters\"","name":null,"binds":[],"type_casted_binds":[],"statement_name":null,"connection":"Not JSON Encodable","filename":"C:/work/adusu_std_demo/app/views/customer_masters/index.html.erb","line":10,"method":"_app_views_customer_masters_index_html_erb__487826091_119080"},"time":"2023-06-30T07:58:57.832+09:00","transaction_id":"bbfbcce798b247f3631f","end":"2023-06-30T07:58:57.834+09:00","children":[],"cpu_time_start":0,"cpu_time_finish":0,"allocation_count_start":0,"allocation_count_finish":0,"duration":2.6372999999999998},{"name":"meta_request.log","payload":{"filename":"C:/work/adusu_std_demo/app/views/customer_masters/index.html.erb","line":14,"method":"block in _app_views_customer_masters_index_html_erb__487826091_119080","message":"  \u001b[1m\u001b[36mCustomerMaster Load (0.6ms)\u001b[0m  \u001b[1m\u001b[34mSELECT \"customer_masters\".* FROM \"customer_masters\"\u001b[0m","level":"debug"},"time":0,"transaction_id":0,"end":0,"children":[],"cpu_time_start":0,"cpu_time_finish":0,"allocation_count_start":0,"allocation_count_finish":0,"duration":0.0},{"name":"meta_request.log","payload":{"filename":"C:/work/adusu_std_demo/app/views/customer_masters/index.html.erb","line":14,"method":"block in _app_views_customer_masters_index_html_erb__487826091_119080","message":"  ↳ app/views/customer_masters/index.html.erb:14","level":"debug"},"time":0,"transaction_id":0,"end":0,"children":[],"cpu_time_start":0,"cpu_time_finish":0,"allocation_count_start":0,"allocation_count_finish":0,"duration":0.0},{"name":"sql.active_record","payload":{"sql":"SELECT \"customer_masters\".* FROM \"customer_masters\"","name":"CustomerMaster Load","binds":[],"type_casted_binds":[],"statement_name":null,"connection":"Not JSON Encodable","filename":"C:/work/adusu_std_demo/app/views/customer_masters/index.html.erb","line":14,"method":"block in _app_views_customer_masters_index_html_erb__487826091_119080"},"time":"2023-06-30T07:58:57.835+09:00","transaction_id":"bbfbcce798b247f3631f","end":"2023-06-30T07:58:57.837+09:00","children":[],"cpu_time_start":0,"cpu_time_finish":0,"allocation_count_start":0,"allocation_count_finish":0,"duration":2.1005},{"name":"render_template.action_view","payload":{"identifier":"C:/work/adusu_std_demo/app/views/customer_masters/index.html.erb","layout":"layouts/application","exception":["ActionView::Template::Error","Ransack needs CustomerMaster attributes explicitly allowlisted as\nsearchable. Define a `ransackable_attributes` class method in your `CustomerMaster`\nmodel, watching out for items you DON'T want searchable (for\nexample, `encrypted_password`, `password_reset_token`, `owner` or\nother sensitive information). You can use the following as a base:\n\n```ruby\nclass CustomerMaster \u003c ApplicationRecord\n\n  # ...\n\n  def self.ransackable_attributes(auth_object = nil)\n    [\"address\", \"address2\", \"card_not_flag\", \"closing_date\", \"closing_date_division\", \"contact_id\", \"contractor_flag\", \"created_at\", \"customer_name\", \"due_date\", \"due_date_division\", \"email_main\", \"fax_main\", \"honorific_id\", \"house_number\", \"id\", \"payment_bank_id\", \"post\", \"public_flag\", \"responsible1\", \"responsible2\", \"search_character\", \"tel_main\", \"updated_at\"]\n  end\n\n  # ...\n\nend\n```\n"],"exception_object":"Ransack needs CustomerMaster attributes explicitly allowlisted as\nsearchable. Define a `ransackable_attributes` class method in your `CustomerMaster`\nmodel, watching out for items you DON'T want searchable (for\nexample, `encrypted_password`, `password_reset_token`, `owner` or\nother sensitive information). You can use the following as a base:\n\n```ruby\nclass CustomerMaster \u003c ApplicationRecord\n\n  # ...\n\n  def self.ransackable_attributes(auth_object = nil)\n    [\"address\", \"address2\", \"card_not_flag\", \"closing_date\", \"closing_date_division\", \"contact_id\", \"contractor_flag\", \"created_at\", \"customer_name\", \"due_date\", \"due_date_division\", \"email_main\", \"fax_main\", \"honorific_id\", \"house_number\", \"id\", \"payment_bank_id\", \"post\", \"public_flag\", \"responsible1\", \"responsible2\", \"search_character\", \"tel_main\", \"updated_at\"]\n  end\n\n  # ...\n\nend\n```\n"},"time":"2023-06-30T07:58:57.802+09:00","transaction_id":"a252842ea9ba5db640d7","end":"2023-06-30T07:58:57.850+09:00","children":[],"cpu_time_start":0,"cpu_time_finish":0,"allocation_count_start":0,"allocation_count_finish":0,"duration":47.928},{"name":"process_action.action_controller","payload":{"controller":"CustomerMastersController","action":"index","request":"Not JSON Encodable","params":{"controller":"customer_masters","action":"index"},"headers":{"SCRIPT_NAME":"","QUERY_STRING":"","SERVER_SOFTWARE":"puma 6.3.0 Mugi No Toki Itaru","GATEWAY_INTERFACE":"CGI/1.2","REQUEST_METHOD":"GET","REQUEST_PATH":"/customer_masters","REQUEST_URI":"/customer_masters","SERVER_PROTOCOL":"HTTP/1.1","HTTP_HOST":"localhost:3000","HTTP_CONNECTION":"keep-alive","HTTP_SEC_CH_UA":"\"Not.A/Brand\";v=\"8\", \"Chromium\";v=\"114\", \"Google Chrome\";v=\"114\"","HTTP_SEC_CH_UA_MOBILE":"?0","HTTP_SEC_CH_UA_PLATFORM":"\"Windows\"","HTTP_UPGRADE_INSECURE_REQUESTS":"1","HTTP_USER_AGENT":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36","HTTP_ACCEPT":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7","HTTP_SEC_FETCH_SITE":"same-origin","HTTP_SEC_FETCH_MODE":"navigate","HTTP_SEC_FETCH_USER":"?1","HTTP_SEC_FETCH_DEST":"document","HTTP_REFERER":"http://localhost:3000/system/index","HTTP_ACCEPT_ENCODING":"gzip, deflate, br","HTTP_ACCEPT_LANGUAGE":"ja,en-US;q=0.9,en;q=0.8,zh-TW;q=0.7,zh;q=0.6","HTTP_COOKIE":"keep-position-%2Fpurchase_data=0; _adusu_session=V0V2Z1hBeUxTLzFBTjlmYlljRlh0eGo4VmwvZFdMOTFyNWxXVW0xamc5TGFOdlcydmlBSUhqWVJGMW5tUDdLdEQxbk5VMHp4NU9DRHp0WXhDM0s5WHlDby9FQUlyK2VPeFBXa3JQUHlPTmhtL3VyZDdCVm4wVWFHaktkL1pTUkIyaWhWNWdEbWdNbkd2dWFZV0ZEeis3Wm5VaTNKam1ISHZ5S2RRZG0xWVNPQjlWbzBBYXRPd0pJYmdiQUM4cy9pN3JrNzFERDRDYmVRUWZ2QlY2R1VSQT09LS1TenB0R2tlcHRXZm42MStwT0F2dndBPT0%3D--794bf4ace947919bc2d487810f312fdbfba6b783","HTTP_IF_NONE_MATCH":"W/\"45a047557a09e94e47166d49a10aa512\"","SERVER_NAME":"localhost","SERVER_PORT":"3000","PATH_INFO":"/customer_masters","REMOTE_ADDR":"::1","HTTP_VERSION":"HTTP/1.1","ROUTES_20940_SCRIPT_NAME":"","ORIGINAL_FULLPATH":"/customer_masters","ORIGINAL_SCRIPT_NAME":""},"format":"html","method":"GET","path":"/customer_masters","view_runtime":null,"db_runtime":8.104599779471755,"exception":["ActionView::Template::Error","Ransack needs CustomerMaster attributes explicitly allowlisted as\nsearchable. Define a `ransackable_attributes` class method in your `CustomerMaster`\nmodel, watching out for items you DON'T want searchable (for\nexample, `encrypted_password`, `password_reset_token`, `owner` or\nother sensitive information). You can use the following as a base:\n\n```ruby\nclass CustomerMaster \u003c ApplicationRecord\n\n  # ...\n\n  def self.ransackable_attributes(auth_object = nil)\n    [\"address\", \"address2\", \"card_not_flag\", \"closing_date\", \"closing_date_division\", \"contact_id\", \"contractor_flag\", \"created_at\", \"customer_name\", \"due_date\", \"due_date_division\", \"email_main\", \"fax_main\", \"honorific_id\", \"house_number\", \"id\", \"payment_bank_id\", \"post\", \"public_flag\", \"responsible1\", \"responsible2\", \"search_character\", \"tel_main\", \"updated_at\"]\n  end\n\n  # ...\n\nend\n```\n"],"exception_object":"Ransack needs CustomerMaster attributes explicitly allowlisted as\nsearchable. Define a `ransackable_attributes` class method in your `CustomerMaster`\nmodel, watching out for items you DON'T want searchable (for\nexample, `encrypted_password`, `password_reset_token`, `owner` or\nother sensitive information). You can use the following as a base:\n\n```ruby\nclass CustomerMaster \u003c ApplicationRecord\n\n  # ...\n\n  def self.ransackable_attributes(auth_object = nil)\n    [\"address\", \"address2\", \"card_not_flag\", \"closing_date\", \"closing_date_division\", \"contact_id\", \"contractor_flag\", \"created_at\", \"customer_name\", \"due_date\", \"due_date_division\", \"email_main\", \"fax_main\", \"honorific_id\", \"house_number\", \"id\", \"payment_bank_id\", \"post\", \"public_flag\", \"responsible1\", \"responsible2\", \"search_character\", \"tel_main\", \"updated_at\"]\n  end\n\n  # ...\n\nend\n```\n","status":"500"},"time":"2023-06-30T07:58:57.786+09:00","transaction_id":"a252842ea9ba5db640d7","end":"2023-06-30T07:58:57.852+09:00","children":[],"cpu_time_start":0,"cpu_time_finish":0,"allocation_count_start":0,"allocation_count_finish":0,"duration":65.61930000000001},{"name":"process_action.action_controller.exception","payload":{"call":"ActionView::Template::Error (Ransack needs CustomerMaster attributes explicitly allowlisted as\nsearchable. Define a `ransackable_attributes` class method in your `CustomerMaster`\nmodel, watching out for items you DON'T want searchable (for\nexample, `encrypted_password`, `password_reset_token`, `owner` or\nother sensitive information). You can use the following as a base:\n\n```ruby\nclass CustomerMaster \u003c ApplicationRecord\n\n  # ...\n\n  def self.ransackable_attributes(auth_object = nil)\n    [\"address\", \"address2\", \"card_not_flag\", \"closing_date\", \"closing_date_division\", \"contact_id\", \"contractor_flag\", \"created_at\", \"customer_name\", \"due_date\", \"due_date_division\", \"email_main\", \"fax_main\", \"honorific_id\", \"house_number\", \"id\", \"payment_bank_id\", \"post\", \"public_flag\", \"responsible1\", \"responsible2\", \"search_character\", \"tel_main\", \"updated_at\"]\n  end\n\n  # ...\n\nend\n```\n)"},"time":0,"transaction_id":null,"end":0,"children":[],"cpu_time_start":0,"cpu_time_finish":0,"allocation_count_start":0,"allocation_count_finish":0,"duration":0.0},{"name":"process_action.action_controller.exception","payload":{"call":"app/views/customer_masters/index.html.erb:14"},"time":0,"transaction_id":null,"end":0,"children":[],"cpu_time_start":0,"cpu_time_finish":0,"allocation_count_start":0,"allocation_count_finish":0,"duration":0.0},{"name":"process_action.action_controller.exception","payload":{"call":"app/views/customer_masters/index.html.erb:12"},"time":0,"transaction_id":null,"end":0,"children":[],"cpu_time_start":0,"cpu_time_finish":0,"allocation_count_start":0,"allocation_count_finish":0,"duration":0.0}]