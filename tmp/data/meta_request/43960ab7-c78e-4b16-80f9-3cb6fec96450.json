[{"name":"process_action.action_controller","payload":{"controller":"PurchaseOrderHistoriesController","action":"index","request":"Not JSON Encodable","params":{"controller":"purchase_order_histories","action":"index"},"headers":{"SCRIPT_NAME":"","QUERY_STRING":"","SERVER_SOFTWARE":"puma 6.3.0 Mugi No Toki Itaru","GATEWAY_INTERFACE":"CGI/1.2","REQUEST_METHOD":"GET","REQUEST_PATH":"/purchase_order_histories","REQUEST_URI":"/purchase_order_histories","SERVER_PROTOCOL":"HTTP/1.1","HTTP_HOST":"localhost:3000","HTTP_CONNECTION":"keep-alive","HTTP_SEC_CH_UA":"\"Not.A/Brand\";v=\"8\", \"Chromium\";v=\"114\", \"Google Chrome\";v=\"114\"","HTTP_SEC_CH_UA_MOBILE":"?0","HTTP_SEC_CH_UA_PLATFORM":"\"Windows\"","HTTP_UPGRADE_INSECURE_REQUESTS":"1","HTTP_USER_AGENT":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36","HTTP_ACCEPT":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7","HTTP_SEC_FETCH_SITE":"same-origin","HTTP_SEC_FETCH_MODE":"navigate","HTTP_SEC_FETCH_USER":"?1","HTTP_SEC_FETCH_DEST":"document","HTTP_REFERER":"http://localhost:3000/stocktakes","HTTP_ACCEPT_ENCODING":"gzip, deflate, br","HTTP_ACCEPT_LANGUAGE":"ja,en-US;q=0.9,en;q=0.8,zh-TW;q=0.7,zh;q=0.6","HTTP_COOKIE":"keep-position-%2Fpurchase_data=0; recent_search_history=%7B%22stocktake_date_gteq%22%3D%3E%22%22%2C+%22stocktake_date_lteq%22%3D%3E%22%22%2C+%22with_material_category_include%22%3D%3E%222%22%7D; recent_search_history_purchase=%7B%22purchase_date_gteq%22%3D%3E%222023%2F06%2F01%22%2C+%22purchase_date_lteq%22%3D%3E%22%22%2C+%22maker_id_eq%22%3D%3E%22%22%2C+%22slip_code_eq%22%3D%3E%22%22%2C+%22supplier_id_eq%22%3D%3E%22%22%2C+%22purchase_order_datum_id_eq%22%3D%3E%22%22%2C+%22division_id_eq%22%3D%3E%22%22%2C+%22inventory_division_id_eq%22%3D%3E%22%22%2C+%22with_construction%22%3D%3E%22%22%2C+%22with_customer%22%3D%3E%22%22%2C+%22with_material_code%22%3D%3E%22%22%2C+%22with_material_category%22%3D%3E%22%22%2C+%22with_material_code_include%22%3D%3E%22%22%2C+%22with_material_name_include%22%3D%3E%22%22%2C+%22material_name_cont%22%3D%3E%22%22%7D; _adusu_session=YlR3d2xNVVA5ZXkvMDVrWi84SXl1ZlprVGZyTnY0QkZLNVJnUGZvNjY2cVhBNkxsdWtKbi9OVWpvWTdMaGxsb0V4Q2pDMWc3c3NDY1ZpR25PZE5GejJHdlowMkdBWUJYVTRERUZMSE0rbncwTzgzR3Yxd0tTUDhxNExURzVVVWFuMnRtYzRUU0JLaVlwaTRwZkRqRk9JMEFVaEVWMmRmZGx1SG0wNmxML1FLZUJtV28wanRlcmd3MEVSdnM2aGVkSjFMaUFmamorQlRDeVo5YkFodndkRkhuTE9UNWIvRTk5NDJWdWZVR2l4QWx6bE5CL2ROcVd3cTNzL1JkRUo5YUdEMC9MeDNqZDdMa0g3SU5MZ1cwdFE9PS0taU9EcjFjZS85MnFKSlRXQnRMaDRKQT09--c8c7c006ea86188ef802dd9e5596d7e0ee84c822","HTTP_IF_NONE_MATCH":"W/\"65e333716403a3eb2bbe5f3c0a0ec2b3\"","SERVER_NAME":"localhost","SERVER_PORT":"3000","PATH_INFO":"/purchase_order_histories","REMOTE_ADDR":"::1","HTTP_VERSION":"HTTP/1.1","ROUTES_21000_SCRIPT_NAME":"","ORIGINAL_FULLPATH":"/purchase_order_histories","ORIGINAL_SCRIPT_NAME":""},"format":"html","method":"GET","path":"/purchase_order_histories","view_runtime":null,"db_runtime":0,"exception":["RuntimeError","Ransack needs PurchaseOrderDatum associations explicitly allowlisted as\nsearchable. Define a `ransackable_associations` class method in your `PurchaseOrderDatum`\nmodel, watching out for items you DON'T want searchable (for\nexample, `encrypted_password`, `password_reset_token`, `owner` or\nother sensitive information). You can use the following as a base:\n\n```ruby\nclass PurchaseOrderDatum \u003c ApplicationRecord\n\n  # ...\n\n  def self.ransackable_associations(auth_object = nil)\n    [\"construction_costs\", \"construction_datum\", \"orders\", \"purchase_datum\", \"purchase_order_histories\", \"supplier_master\", \"supplier_responsible\"]\n  end\n\n  # ...\n\nend\n```\n"],"exception_object":"Ransack needs PurchaseOrderDatum associations explicitly allowlisted as\nsearchable. Define a `ransackable_associations` class method in your `PurchaseOrderDatum`\nmodel, watching out for items you DON'T want searchable (for\nexample, `encrypted_password`, `password_reset_token`, `owner` or\nother sensitive information). You can use the following as a base:\n\n```ruby\nclass PurchaseOrderDatum \u003c ApplicationRecord\n\n  # ...\n\n  def self.ransackable_associations(auth_object = nil)\n    [\"construction_costs\", \"construction_datum\", \"orders\", \"purchase_datum\", \"purchase_order_histories\", \"supplier_master\", \"supplier_responsible\"]\n  end\n\n  # ...\n\nend\n```\n","status":"500"},"time":"2023-06-30T12:04:42.683+09:00","transaction_id":"b9bf8f210cbe30276511","end":"2023-06-30T12:04:42.685+09:00","children":[],"cpu_time_start":0,"cpu_time_finish":0,"allocation_count_start":0,"allocation_count_finish":0,"duration":2.5399},{"name":"process_action.action_controller.exception","payload":{"call":"RuntimeError (Ransack needs PurchaseOrderDatum associations explicitly allowlisted as\nsearchable. Define a `ransackable_associations` class method in your `PurchaseOrderDatum`\nmodel, watching out for items you DON'T want searchable (for\nexample, `encrypted_password`, `password_reset_token`, `owner` or\nother sensitive information). You can use the following as a base:\n\n```ruby\nclass PurchaseOrderDatum \u003c ApplicationRecord\n\n  # ...\n\n  def self.ransackable_associations(auth_object = nil)\n    [\"construction_costs\", \"construction_datum\", \"orders\", \"purchase_datum\", \"purchase_order_histories\", \"supplier_master\", \"supplier_responsible\"]\n  end\n\n  # ...\n\nend\n```\n)"},"time":0,"transaction_id":null,"end":0,"children":[],"cpu_time_start":0,"cpu_time_finish":0,"allocation_count_start":0,"allocation_count_finish":0,"duration":0.0},{"name":"process_action.action_controller.exception","payload":{"call":"app/controllers/purchase_order_histories_controller.rb:31:in `index'"},"time":0,"transaction_id":null,"end":0,"children":[],"cpu_time_start":0,"cpu_time_finish":0,"allocation_count_start":0,"allocation_count_finish":0,"duration":0.0}]